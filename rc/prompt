#" vim:filetype=zsh

# Set VIMODE according to the current mode (default “i”, otherwise "n")
VIMODE='i'

if [ "$PREFERRED_BINDING" = "vi" ]; then

    # Custom widget functions to update VIMODE and update the prompt
    function zle-line-init zle-keymap-select {
        VIMODE="${${KEYMAP/vicmd/n}/(main|viins)/i}"
        setprompt $VIMODE
        zle reset-prompt
        zle -R # this is needed otherwise pressing Enter or Ctrl+C in vicmd mode will not refresh the prompt
    }

    # Tell zsh to use my custom widgets
    zle -N zle-keymap-select
    zle -N zle-line-init
fi

# Sets prompt colour depending on VIMODE
# $1 parameter can be "i" for insert mode, "n" for normal mode
function setprompt {
    local p=""
    if [ -n "$VIRTUAL_ENV" ]; then
        p+="($(basename $VIRTUAL_ENV))"
    fi
    p+="%B${USERNAME}@${HOST}"
    if [ -n "${vcs_info_msg_0_}"  ]; then
        p+="${vcs_info_msg_0_}%b"
    else
        p+=" %~%b"
    fi
    p+='
'
    color=${${1/i/31}/n/32} # Red=insert mode, green=command mode
    p+=$'%{\e[0;'
    p+=${color}
    p+=$'m%}> %{\e[0m%}' 
    PROMPT=$p
}

if [ -n "$PROMPT_HACK" ]; then

# Hack to avoid zsh rendering bug in version earlier than 4.3.4 (?): in custom widgets the multiline prompt can get updated several times after each other.
# This multiple update is not handled correctly by zsh. The result is that last line is removed from the console buffer.
# In fact the first line of the prompt will be printed by precmd, instead of PROMPT.
function precmd_hack {
    echo "`tput bold`${USERNAME}@${HOST}`mypwd`"
}

precmd_functions=(precdm_hack)

# Hacked pwd which will replace "/home/$USERNAME" with "~"
function mypwd {
    dir=`pwd`
    finalpath=$dir
    a=(${(s:/:)dir})
    if [ $#a -gt 1 ]; then
        if [ $a[1] = 'cygdrive' ]; then
            if [ $a[4] = "$USERNAME" ]; then
                finalpath='~'
                if [ $#a -gt 4 ];then
                    finalpath="${finalpath}${dir/\/cygdrive\/c\/Users\/$USERNAME/}"
                fi
            fi
        elif [ $a[1] = 'home' -a $a[2] = "$USERNAME" ]; then
            finalpath='~'
            if [ $#a -gt 2 ]; then
                finalpath="${finalpath}${dir/\/home\/$USERNAME/}"
            fi
        fi
    fi
    echo "$finalpath"
}

fi

# Inject git information into the prompt
autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:git*' formats " [%b] %r %S"
precmd() {
    vcs_info
    setprompt $VIMODE
}
