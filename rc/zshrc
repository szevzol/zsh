# tell zsh to parse my custom path for functions
fpath=($ZSH_HOME/functions $fpath)

# load custom completion stuff
autoload -U $ZSH_HOME/functions/*(:t)

# initialize completion system
autoload -U compinit
compinit

# use ls colours for completion
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

# use menu completion style when more than <select> matches
# <select> may be fine tuned later on
zstyle ':completion:*' menu select=5

# some useful completion settings
zstyle ':completion:*' verbose yes
zstyle ':completion:*:descriptions' format '%B%d%b'
zstyle ':completion:*:messages' format '%d'
zstyle ':completion:*:warnings' format 'No matches for: %d'
zstyle ':completion:*' group-name ''

# use smart auto correction
setopt correct

# include the .alias file
test -s $ZSH_HOME/rc/alias && . $ZSH_HOME/rc/alias || true
 
# hacked pwd which will replace "/home/$USERNAME" with "~"
function mypwd {
    dir=`pwd`
    finalpath=$dir
    a=(${(s:/:)dir})
    if [ $#a -gt 1 ]; then
        if [ $a[1] = 'cygdrive' ]; then
            if [ $a[4] = "$USERNAME" ]; then
                finalpath='~'
                if [ $#a -gt 4 ];then
                    finalpath="${finalpath}${dir/\/cygdrive\/c\/Users\/$USERNAME/}"
                fi
            fi
        elif [ $a[1] = 'home' -a $a[2] = "$USERNAME" ]; then
            finalpath='~'
            if [ $#a -gt 2 ]; then
                finalpath="${finalpath}${dir/\/home\/$USERNAME/}"
            fi
        fi
    fi
    echo "$finalpath"
}

# Use colourful ls and grep
export LS_OPTIONS='--color=auto'
export GREP_OPTIONS='--color=auto'

# This variable will be inserted to the prompt
local prompt_ccview=" "

if [ -x /usr/atria/bin/cleartool ]; then
    # save the current clearcase view
    export CURRENT_VIEW="$(/usr/atria/bin/cleartool pwv -s)"
    prompt_ccview=" [$CURRENT_VIEW] "
fi

# set VIMODE according to the current mode (default “i”, otherwise "n")
VIMODE='i'

# custom widget functions to update VIMODE
function zle-line-init zle-keymap-select {
    VIMODE="${${KEYMAP/vicmd/n}/(main|viins)/i}"
    setprompt $VIMODE
    zle reset-prompt
    zle -R # this is needed otherwise pressing Ctrl+C in vicmd mode will not refresh the prompt
}

# tell zsh to use my custom widgets
zle -N zle-keymap-select
zle -N zle-line-init

# Use vi command line mode
set -o vi

# In vi mode must redo this bind to use history search
bindkey "^R" history-incremental-search-backward

# Sets prompt colour depending on VIMODE
function setprompt {
    if [ $1 = "i" ]; then
        PROMPT=$'\e[0;31m>>> \e[0m'
    else
        PROMPT=$'\e[0;32m>>> \e[0m'
    fi
}

# hack to avoid zsh rendering bug (in some cases zsh removes one line from history buffer when prompt is multiline)
# in fact the first line of the prompt will be printed by precmd, instead of PROMPT
function precmd {
    echo "`tput bold`${USERNAME}@${HOST}${prompt_ccview}`mypwd`"
}

setprompt $VIMODE
